Here is a GitLab CI/CD job that does the following:

Accepts two variables:

CRT_FILE_NAME ‚Äì the name of the .crt file stored in GitLab Secure Files.

SECRET_NAME ‚Äì the name to use when pushing to AWS Secrets Manager.


Downloads the secure file.

Converts it to Base64.

Pushes the result to Secrets Manager.



---

‚úÖ GitLab Job Script

push_crt_to_secrets:
  image: amazonlinux:2
  variables:
    AWS_REGION: us-east-1  # Change as needed
  script:
    - yum install -y unzip curl aws-cli coreutils

    # Ensure required variables are set
    - |
      if [ -z "$CRT_FILE_NAME" ] || [ -z "$SECRET_NAME" ]; then
        echo "ERROR: CRT_FILE_NAME and SECRET_NAME must be defined."
        exit 1
      fi

    # Download the CRT file from GitLab secure files
    - echo "Downloading $CRT_FILE_NAME from GitLab Secure Files..."
    - curl --header "JOB-TOKEN: $CI_JOB_TOKEN" \
           --output "$CRT_FILE_NAME" \
           "$CI_API_V4_URL/projects/$CI_PROJECT_ID/secure_files/$CRT_FILE_NAME"

    # Base64 encode
    - echo "Encoding file to Base64..."
    - BASE64_CONTENT=$(base64 -w 0 "$CRT_FILE_NAME")

    # Push to AWS Secrets Manager
    - echo "Pushing Base64 content to AWS Secrets Manager secret: $SECRET_NAME"
    - aws secretsmanager create-secret \
        --name "$SECRET_NAME" \
        --secret-string "$BASE64_CONTENT" \
        --region "$AWS_REGION" \
      || aws secretsmanager put-secret-value \
        --secret-id "$SECRET_NAME" \
        --secret-string "$BASE64_CONTENT" \
        --region "$AWS_REGION"

  only:
    - main  # or adjust to your preferred branch


---

‚úÖ Usage

You can trigger the job manually or from a pipeline and pass the variables:

variables:
  CRT_FILE_NAME: mycert.crt
  SECRET_NAME: myapp-prod-cert


---

üõ†Ô∏è Notes

1. Secure Files: GitLab Secure Files must already include the .crt file.


2. Permissions: Your GitLab runner must have AWS credentials set (e.g., via environment variables or IAM role if using EC2).


3. Secret overwrite logic: The script attempts to create the secret first, then falls back to put-secret-value if it already exists.



Would you like this as a reusable GitLab template include or a custom shell script for better modularity?

